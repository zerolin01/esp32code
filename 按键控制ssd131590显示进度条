#include <Arduino.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED 显示屏宽度
#define SCREEN_HEIGHT 64 // OLED 显示屏高度
#define OLED_RESET     -1 // 若没有复位引脚，设为 -1
#define SCREEN_ADDRESS 0x3C // I2C 地址，可能需要根据实际情况调整

#define BUTTON  14

// 定义可以在外部中断函数中使用的变量
volatile bool flag = false;
float load = 0;
// 定义外部中断函数
void handle_interrupt() {
  flag = true;
}

// 使用软件 I2C 初始化 OLED 对象
Adafruit_SSD1306 oled(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

int progress = 0;

void setup() {
  Serial.begin(9600);
  pinMode(BUTTON, INPUT_PULLDOWN);
  // 配置中断引脚
  attachInterrupt(digitalPinToInterrupt(BUTTON), handle_interrupt, FALLING);

  // 初始化串口通信，用于调试输出
  Serial.begin(9600);
  // 初始化 I2C 总线
  Wire.begin(13, 18); // SDA 接 PIN13，SCL 接 PIN18

  // 初始化 OLED 显示屏
  if (!oled.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    Serial.println(F("SSD131590 allocation failed"));
    for (;;);
  }

  oled.clearDisplay();
  oled.display();
  oled.setTextSize(1);              // 设置字体大小
  oled.setTextColor(SSD1306_WHITE); // 设置文本颜色
}

void loop() {
  if (flag) {
    flag = false;
    progress = 0; // 每次按下按键时重置进度
    // 清空屏幕
    oled.clearDisplay();
    // 设置光标位置
    oled.setCursor(2, 10);
    // 显示文字
    oled.println("Process");
    
    // 显示进度条边框
    oled.drawRoundRect(0, 20, 128, 20, 5, SSD1306_WHITE);

    while (progress < 118) {
      // 显示进度
      oled.fillRoundRect(5, 25, progress, 10, 2, SSD1306_WHITE);
      
      // 计算百分比进度
      load = (float)progress / 118 * 100;
      
      // 清空之前显示的百分比
      oled.fillRect(50, 55, 30, 10, SSD1306_BLACK);
      
      // 设置光标位置到 (50, 55)
      oled.setCursor(50, 55);
      
      // 显示百分比进度
      oled.print(load, 0);
      oled.print("%");
      
      // 刷新屏幕
      oled.display();
      
      // 进度递增
      progress++;
      
      delay(50); // 延迟一段时间后更新显示
    }

    // 进度条完成后清空屏幕
    oled.clearDisplay();
    oled.display();
  }
}    
